scalar ZonedDateTime
scalar BigInt

enum ClassificationEnum {
  UNCLAS
  SENSI
  CONFID
  SEC
  TSEC
  INTEL
}

interface BaseEntity {
  id: String!
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

interface AbstractItem implements BaseEntity {
  name: String
  container: Container

  # Base Entity
  id: String!
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

type OfficeEquipment implements AbstractItem {
  isFragile: Boolean

  # Item
  name: String
  container: Container

  # Base Entity
  id: String!
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

type OfficeForniture implements AbstractItem {
  isWood: Boolean

  # Item
  name: String
  container: Container

  # Base Entity
  id: String!
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

type Software implements AbstractItem {
  isOpenSource: Boolean

  # Item
  name: String
  container: Container

  # Base Entity
  id: String!
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

union Item = OfficeEquipment | OfficeForniture | Software

type Container implements BaseEntity {
  items: [Item]!
  location: StorageLocationsEnum!

  # Base Entity
  id: String!
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

enum StorageLocationsEnum {
  NORTH
  CENTER
  SOUTH
}

input AddOfficeEquipment {
  isFragile: Boolean

  # Item
  name: String

  # Base Entity without id
  realityId: Int!
  classification: ClassificationEnum
  createdBy: String!
  creationTime: ZonedDateTime!
  lastUpdateTime: ZonedDateTime
  lastUpdateBy: String
  isDeleted: Boolean
  isClassified: Boolean
  secGroups: [String]
}

enum ItemTypes {
  SOFTWARE
  OFFICE_EQUIPMENT
  OFFICE_FURNITURE
}

input ItemsFilter {
  byTypes: [ItemTypes]
}

type Mutation {
  addOfficeEquipment(input: [AddOfficeEquipment]!): [OfficeEquipment]!
}

type Query {
  items(filter: ItemsFilter): [Item]!
}
